'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});


const BN = require('bn.js'); /*
                              * Copyright (c) 2017-present, blockcollider.org developers, All rights reserved.
                              *
                              * This source code is licensed under the MIT license found in the
                              * LICENSE file in the root directory of this source tree.
                              *
                              * 
                              */

const debug = require('debug')('bcnode:wallet');

const { getLogger } = require('../logger');
const { blake2bl } = require('../utils/crypto');
const TxPendingPool = require('../bc/txPendingPool');
const { createOutPoint } = require('bcjs/dist/utils/protoUtil');
const {
  internalToBN,
  internalToHuman,
  COIN_FRACS: { BOSON, NRG }
} = require('../core/coin');
const { OutPoint, WalletOutPoint, WalletData } = require('@overline/proto/proto/core_pb');
const { TransferResponse, Transfer } = require('@overline/proto/proto/bc_pb');
const { toASM, fromASM } = require('bcjs/dist/script/bytecode');
const { getScriptType, ScriptType } = require('bcjs/dist/script/templates');
const { MakerOrderInfo } = require('@overline/proto/proto/bc_pb');
const {
  BC_COINBASE_MATURITY,
  getTxOwnerHashed,
  parseMakerLockScript
} = require('../core/txUtils');

const MAKER_TAKER_SETTLED = 1;
const ONLY_MAKER_SETTLED = 2;
const ONLY_TAKER_SETTLED = 3;
const STILL_IN_SETTLEMENT = 4;

const SCOUT = ["4eb7c08f4d5d730f2861d299f58e9dc8fee956e9db22c95e39d0e89547fcfce0", "e9ff6fb080ad5f2a62702489995755f6f6d223dad5f3630422bed7badd6ca909", "9b81cda0272eb740cc294f19857028438c137ebdd2c5702aefcc04203b0ab9e3", "a806f7dbc6b9b980d22277a4a06da2fe0d52909327c00ca8e9bf35f4aecef36f", "3a5097f1bf023dad4584188b3afd142db86a49ac5585bd2f88066b043768c0a9", "9ce3e27438df4a8f8c195a1229db32b64ca44c79a27bbf85c2deb83a43c53abf", "eb5b30279037ea330c3ca3596fec7e156f95abf4f57b2cb99e4e576583b5fd55", "0cf6177018cfc006683c5c93e675931071e421d5f0ce3bad46ae6a86510dd022", "13a6d4aa62fa6317be8cdca556a54fc915cea2d65337014276d40d9802de88f0", "fb491dcf8aa2a19136ec3528dff5c51ece08023945673d83c60f5b88425a48bb", "65ae540bfc967e890cc8b8fc11db63f061e3732e1922a3d51fac44887460dd81", "b51911dbc349b38a45531c931113d1e29cf9acfd3e348cf605410fc45422f104", "efe6f36d2c7f74309b6e6993073c336f05171fed8bfe3466d63a6c2d2b7a54ee", "434f4b55e54e86a20ea5e994a72ee1d10b0c9753867e6b4a56280dcb182c8fb1", "eac41079763fe7d3bd7a62ab5cb9b393ef6b68f286d548c484e25bbcb829a30f", "3965ac22575f7989040f8e43e63f2f390d696a6d71923cff5ebff1bd6d34168d", "05aba60647258c05dc84166598b8ab3775a710c82f8f6ce8b4562510c176a2d1", "831f5e199a4f9b8fda694ca3b6e3d8372f8a3547a72904e590b4663f27242179", "c7853db1a61acfce52c75beff05cb16a8ce6d4f370367c02616414d37c9006bf", "c7853db1a61acfce52c75beff05cb16a8ce6d4f370367c02616414d37c9006bf", "1046bc08f1f77398a5757d295f9c067f73d4a932499eeb8059ad4ba3072a053b", "deb18d5fce74709372bf082790ac16a0abe474d290a61a9984a97501b4037985", "c1b61c8919b435e608cb0ac49df81cfcfe7e82f288eb83a1e865a3d4e9b541d7", "43fde2aa455357595a23f1c2563d953249947aa21ae34f5a0dc375b1542b8716", "69f61fff686012616da97bf1762f107aba6f827d28c984455b82306c6b0b825e", "58276b7d5a4dd3aef4446365766810557e1f34596bf2dac909c67d766c6f5ed3", "5c168d01eaef67fcd0d6e24ad2679399f0f75d71f514020f2ae93724866ed427", "f695f4c0b604c30ffa7519abf3cb9ca5df3a9b453c6942cfb51378e2915af1ea", "f6c4b9466146280ba9d2d161e4f327c95615ee929df9be787cf5993ad75b9e16", "8861ba3888b192c4d602021a93757a824d4852dc5ab92a4f5ebb4bf84f2c4ab0", "44256832452c98cdacff46cc2773116996cc609d6573c48711a7475d376db5ec", "a9d15d2a4664e8182ba66d675a5a08bd4a4abf01c9f74d1cbc690eb1d05b5268", "a70e134c655c0e27393fffc2195a22701e78e6d36316a566c1ed8ebfdc020c5c", "dc7744014f90e28e62bd84225e6456e4fd7687fce8f3bbc0b7fb1d4ff83ff701", "0eba3fe5360ac7cf7c5e7b55ddb4b8c56631f065a97055653a1a48356cb874ea", "512a130c64e33484ad5a6c985841a12c2fb038a0a2a6f2c6c9b2cc73619a0d50", "621965babf0f1eacb4e7d5bc5cb19d27ab8b7fa094f50cad83ba16c05e484661", "b62f2f7c8aad84de3bb2aaefbcc1ceed0f8816fc88191b19a91017ac89ac5354", "5bee0de676db100a4149f75e804beb2cee77178707bb01cb0c8caaee48d18f01", "cc51e5d8d8fb79fcfa0f5ed7629663ea0f2b69781190e81f39c499b3d5453f74", "0ed7b0f351b5ee431025342b4c63d4511d75eb836f9cb8423682d57127041010", "572c33b9db231a3063249fa453291d6c7fee29e1041f2f40c1101ced97b7546e", "56e7f20ad3673fb9cb3902b2a083f570203366cf31110dfa57825683956b9f08", "80f2d16cf28c579a3171c1f8ce64eae0d06ecae1f251de2e1dc87cb0f8df1fd3", "cfd7443440a8e337e5a3bddbcefcdbe7e92a38ed3a23112c32247ad36d292e6e", "23c17a5c892123076a776ee2084ab2feb1cdff05f7cfd080645b2575b0bb802b", "b6b4373621a5d2e857bd4f678b23e0c07ce71215992a5d589653190cde320702", "e0964d9ca1cdd3c98b7e414fe836ed7a8c16d1d0e6820fd2b10cb4454d660d41", "e7b9fc4ab884ae2cf243079716026530d8485341ebd36c5fc91dc7db8fa80863", "e892d2a60509d870d6721e6acc72fe4fc63d72685358ee9aa4d7f6c343e51a05", "56c22cefeaf2869cfb671f172484801c537084badbd7fcffd7d92c7fbd3cdda4", "f1c10b69885becdc0c5702cf2c676b514dcfa99d027723910962e730ebcfbcec", "c3d3ad0da0c07449887779d0ec8ca2c5e0c2aaa2894e84ff2904ffdfc02aa78e", "cf32d67a8dd4ee0c6123c6898b82653276e8fa84e6b278771f0164ddeded3689", "52d7661b9ac76b43cefc0e189f76736e76a4e93c79fe0a057df9b31ec0f53461", "bb6fabccdeb29d176e1a07e8dc755bd7fbf1ee82a4862d219567afcbcbf22198", "768b89f455a9dd163158129756c195fd5fca58592029f068c8f8508c2aea5ff3", "8013d3d93230b636ed79a454aee61d620123748548031ae3c5d441ada00b66c1", "c902f0d01525d9fac210b958fa2f5bc8c7ff960e036812f39c2462f46a28f27c", "84e3c42f56cafee069e50b6905c164829b86b2888681a3dfa6b7f738aadaaf42", "44ce7fc2eb2456561431a0247c1514c631b621d7d37a21145b4355581ba7963b", "cb7ffe358772d5900010a611e3371ada3926778d560ae54e3def1b766d14df38", "3532ab63fca14ef892e2b28f3d532b029331e71eb4be92fcf1cc5245a3cfd7f3", "f19b2fc77f17734f7ee520ca61557e33e6fce9856fbff4f67b636723f8aa4b9b", "63803fe9737a5a35d1b24f6f0ec1013c53d62f3fe711ca3b98d6bb302c811799", "c7c3162f7bad147cdf12f9acada04757dbd212539011599092c30e6cee5e3813", "dd004d31e0139d699e661645c2a7c1b79e829359e93100db50a90cf2af7e1166", "d50ce8bd5a02077eecbd83cd9f514632883b73684eb080e41c9faaa14262c773", "d2b2af1957813c52d6c795d51d10aa86b0840c5a1c8327b85be7bc7f4edad93e", "12f5068b0b0f54e61be7bf803d4601b12218dad933c274f28c1146a53b4fc03b", "494ce1fbf56bb77c7fc86b589a820abbb730432f7c8b33f527457f683712c2d3", "5505e6da1aa5852f2461c9bbaaa605747b43cff06fd69da53536888e45029a33", "7184a0dd8e8d4fb733168297e4e4b363e3af1b718432eff8105cd89087f9f4fe", "496ae1816ccaadb0fb762b8700c0aa69bdc0539b1a50ce4549ac9e8a60456300", "b7edbf4ab60487ec9f7592310d57df734ad91c620a609dc89e00445333e179f3", "80c5fde0a7af81a3925da86d993d9a638fbd200744eb974c28debe442501a063", "e4b0b98c1e95a18502a7a8bbee1cb71900e8241d43749ea185560d1a5996e9ae", "337a6af9fb75ed6cf2a7297d2433e15f7bc010777349ad37b8ce69abd0cfd6b9", "58583ff2d1855ee5b005773204c13865e6e86f85c63e48e616c880cced7ba9c6", "3123fb09a7a0de0d4c84799c626b5f62c348a67bc992fcd65d316fcfa6459d17", "cbf0f13e06548231d1a8ea5128a6e91424a7b05e6533da3aac52731b4dae1b04", "0512d1b210e860c39ea50e75eb3136178abaa066380ce13d78fee1e8725ce08a", "0b9f7c2ad23fd8596446951ad792f1631adca7b3c203704baa09f4ba52762b36", "d85f6b977e678f1d229ece5defb1b9f986bb8f6acbef76cf18a0956e249742f5", "5f2b12483ddf85c82f136dfda7d06bbec268e843f4a02f8224947510682ab231", "cf8c58f0b990e96d27f808c028371eb4b651f1ed5301ee4a40e2a301e35e6ad2", "8bf85135b582443b23d9fe3c24785698e41ced2eb5b2c5a9ceb8d52317ce9c2d", "469cfce531cf980182e62351c4ffc76b5c9e6658cf568ee95d253de18ee2e724", "a8c720fedaa1793234979bb5df35b579e5bd1d5fcc56895c3ec0f3ef12c8b603", "90d71b87538b1b1c30aa6bff52943bb5c7391ac9fd802665d19fcdf536842fe5", "07bb466c155aaf65e83462cdef3ff36d0b90d0dc8b97c1d116bae880550ac60b", "c876c9d61eeaf81394e789afd84a7e367082e1545950de9fab75b6c0762abcc5", "a9cb03d71c623a7b58b5724697128b6fba21cb1206318d9458bd991883a6f686", "ae549e5c800edf24882a29f025b8fa4cd741885ab0922c7919c2eb342c4b4cb9", "6fb4b148e0b17ff1ebed32a93929ee9b82087065e074a8cf4936edff49b6609b", "346dfee6f6ec592ee9eda5d752167d3f2bc4c1d60ac9c80842669a220c7d0df2", "ce15aeface3cfa9c39fa2e21065d2352f8598ebb18c360262a196700dd9490ff", "57f1ff9dd0cefcd5b31aa3adeafa585bbf2d7aca6e33a8debe2c795f4893ef79", "8ad643f82fe7b5342f522dc194dbc160703a28e95d9ce8dddc869e0362efb10d", "74171e3166a2f963e8f8b8ae239f4bb9f63c6921913a2ad2e9f2cee53cb8961a", "22c8acfebb8a454c11cf6a3125a385d46061c16b5a983159509ba8f7cb020ec6", "fbf74c9470e7bcb54daa2c4fc59686c587b8f84becdf638cb94596d17be07d11", "2b39f06f6197f1b56f95bb9d784b5246436d624aaf82a64ed34648aee96fff07", "e6d8dbadb3be34b716aaa57dd1ae7e46d3ba16ffddfaf4f1282d2b0d7b2c0d0b", "3a7be00451724899ead8b3fe3b3924cb6147c3051b14727634bbcfe85703cfec", "20e92d0c1cbd99e2252e180d1805830dcd44db6e90471e17bf2ecb1cde7b2121", "9eea928b0e73a91d3140f5a05a83d2412afa1ffa9709cd2a44c2962094f26e6f", "7e71bab3f87bd6fb9f45fbeb7cc9ecdecf036451eff425a3ba3a31a958d5379b", "7489a4cb3f4beb0a59eca0ba262babf8ca6babb555c75537ca116c25342a41da", "d4d6c1ed67efb56ec7006d429d9a655666256e2f776f982e927491f3e0b823ac", "e301735d474d6fc96a9f82c7a9555ab62f3de591164abe1f85fa783318151862", "d9957df5db1f9d13db1213e9b46db74304d4b1246203b1450f5cb8545805feae", "41fa9d94923b876b823af0e0fbc550debba6fb9fe41925ba1711187ba6234f1b", "6b8c86beb5e4ebe7e794776298808ca3d0286f9bfab35edfa286e5235d36a70f", "6f8e3d5218a07452687b3bb264cd06ffae6c7e360b18b97adfd58478539c41eb", "4330974f1a584d575a3cd4ef9c1730888e42ec84e0cb70b3352b716da27774af", "ac0864790fad2ec88f876d7e4f112597ee02c0b8dd097d8320a8191c6eff225a", "a07f2324fac29ad39cafac3aa01cd665f9d31c2f333cca96b2b0de00aa647293", "2c3b65be65ae3a3d5bc38ecaba5d9d2ec4952c6e5516eb44dcbfa30f1bf99be8", "c13aa873ecfe5fb5ba838b855ffd72c108a29c8db3aff6266d7fe4559bf42dc0", "c9e2784ecf091cadc8fb9bd0d6fcb357956691583ceca7ccd2a8374ddac35d40", "f32da8d742b040695f674f58fc5c210dc5422ca87e2ff02890957534000af5bf", "49fa98862e941c246b3130e3afd9cd4b4534c8a17d3f1b77e2b89db392defbf2", "018a419eb153289c58c010d5c88c608273e29774cea8cd16e338d5a8e26df99a", "1a11f387afd6a03e1a93eb3f4ac77092bcbda6c0e37eeab7f8d6cdad1b99424a", "45d6117677dee2bc5b0514a7a951180ead5b6f173716e4ec40a6d17d7651abff", "aa1634c171468cae80eefb69819a06b27765d99894eefd204446ef6ddc266beb", "1899311da6a86a4a206ab414e3787424c2a862459ca427020be2f98e911afd80", "ca4e6b895c922f71e2e8db0b3c3249af1ed207df6297768c68b91a53f21b018c", "cbfa449cd34fd02e4d1cee30f801df66d670d24d51e7e62568df9cc63bc02e83", "55bbacc4f7e1b237753c8036ff7c48177464be0706c68c4ba2dfbceacb6c5467", "e9da52b0a84b5ea374a1bd0bb0f868174ffc5199c87d1668d8fd545204dc1d60", "e127bbf8ec9feae3b35dae7d44aa4cff88e3d03c9803846e3d3322330e5b4a78", "510b44420b0bf1a75c00228145e8e948bd8c765448aa2d18a31a5aa122ddd6af", "bac11b696bb923994b5810f591db5d047cc860ae8cd54d074735b87ea100e426", "f5548e1f7f83f51f6a89aab2daa51fc2e9bcb757aaba5e6a6a5225fcbea9679f", "c665819ceef1b6f1f5c9b4ce44efa13e63b12133852e41684aac54b5ff9b6282", "94abd5f7b6e02db8c461dc8604462086c7bc57b4890e97f190e830db81bc1cfc", "c576af348a5877d2343f07a61e90127df8f9bf095192a031dbb700eb27ad7c2b", "4f0a8404891185d38098953aae61f4c1b2ca6be61d95f864a3844e6bb5470e3d", "45e581908f9ae81e27e835ea3a54c35aaa0685764d943f3ca503d9dc78749ec0", "ad9f1370a1f4f993421e30071e4f4f0cfd43f57038116a44f3e45423ff8a74ae", "30a49845b90e014eaeb06813b9b5ccafc150c76030903acc434b23d4c97324e2", "d5bab27a64f2f96fe064b4105dcb2dae7f2d5d1f4338082e3d649b33e8051fe4", "db882bef961ce30b1f66eae329d15f5307a2e6f48b865a847303eb5e992a913a", "cfb6d8489181605ab38c35a6fc195a9a68b8ae59dc0c1c6968853d8b071b6a25", "21b7c02ac6e3398607302a322f95b716d193422624ab57d3b5d482e02c9a5e2b", "5a3a9816e7830be5f6289bb2b435a61c91aa2c81995fd30be83e0fda5beeb1ae", "81af554cc1f5c065df911ff4915e2ddf8c8461f8ed9839d57c19b3119f43c6d7", "e702ee5b268839d6047407b6f969f6d5307c554fa5f7ad202b909668a786ffa6", "d349b72c3d46685f1ff2a7a288adeb47bff542d2cd13180b30a0b39f13068cb7", "2f2d080096230f11e1aec8a5a75269a52e8570008be3709c7214df57aff2a0d3", "3c7992e80c8c004b8b2c9b26098db87408a07e5f07a94b7f52bcd471236252e1", "99ad582f58d571a41724863c33cb36279234bd2e6de2e70b3a594846b8b0c0d9", "b81f7cfc7c72006d2c955d7d8aeec3f838cfa00b9d3e130ca7801d4592a0f665", "8b0d2bf6cc66ea93b6c2ab4ef0f0eb0775fb38167a1a5b5f263f67507ed266b0", "0d9c55653ab80a742c01c6e4a718604c9ceece42dc6779548447b82b11070675", "f50d3acdb78d25bc9e84d4583e1cc7cedeaf8fd289717416501e53c5e7a3c672", "a3f7bd71e547938efe22c15027088018f7a0558bda073b7423ebeb89aee22169", "1026b6f5adafc60dc450d001f154e308bee717bcad71ff46994d0a4d113d818e", "c4fff51d88fd8ee54bf97c4247405aa4bb5589f5cc9c169b168e307385ed25c5", "dfee69443d6f04ddd89ca72ea1bba52471a68715ea60135cee789fafe917b31b", "51e76cdf033c58a1e5fafcf28894700dfd362058abfc5fdd9c524e0f7e73950d", "a5a7d27e5a96d833fb645d7e4cca393f790ad02a629b16bda4045178d32c9612", "2f76d594b68573ed1280f35725b627134bd6c63f9b63d81e43b222b0d75ebcad", "d5a1379aab026c99535464bf592e8a5dee70396d578e4bb854581ab31625d410", "2bc2eb03b339caa9dc9d0a7dff3d48368bcdb00afb38ce81a8b76260c7c98ed9", "495b56aee0bd7e07ff991d846dc06f61e87e7925803e14d46d0d0f7f7d4060e3", "ab65e45df8cb133aacac897a17658b8e941b298f6a4d4db8dc95659934afc78b", "3d5941db98e587971e27a04ea5fda2b54218a1e757b56106b7197ab4c291000e", "b2696495ee42891b8908232861d1aa342a9abf38876df80f87786ddcfc1b4d7d", "3466d68295775ed9d64a0c4e018fe204fb6fc4c82229c6509743759bcfd6b4ff", "1460a3d248c0e38a43a1c05005c70aa9edfb720a89c62fea76c1826e92655bb0", "7056b0d5b5dc6484cad3bd2d286a57968cad966c7647f451f58dbeb61a9d9349", "e020b957b8a3a8c23161c29b89f1f7322b7cea831dbda833aeba531887e2c235", "2c7d240bee2eb9bcb3a353ab0f792f589317492d1e49e01dbb017d4d0f3ce18d", "9c365cf2f3e3f8366b2364d92b5c064719865e6277501a7a03c482af50cc9959", "8a284704c5f2bcead0b00cff6eb4e78b18cf5d10c2a34bd681dd0c142c0a9b0d", "af47e12802b8c314c93eb8f9d475cb0fcf905153b48e0c24c0bc21c4453bae52", "8cb4a44017aabfb36b2fe00e15a59071ec391d3041483e2da6cf0695e34395fe", "14879f363e942df7865e4c6a354866986054413e5d43362cdba944720487375e", "f30483454bc24c853c86f104ff7e465dffd072d3edf2a8b89a2b5ce53d1a7663", "0a32364b4b7358138ce3d77e0cf3439fd6874500b23e55e02f6113bf3377f137", "316c3c57997439560d3b93cb0ca4eec9490b585c54ce364841a05d9b6c20f8dc", "bb10a35c7a687220f504b6a3b0415a11170fd75edfb8facd15a209577c8eb818", "ac875fbc57485c3adc4c2a2698d6b8ef1d6d85d0520520695339cc4aa69e2d19", "d05817c60b49047a1fcd01d3a8f9b73e20eb47b51aba907fbd40fd162cf25caf", "53e7f9f37179cb69af1d3b3ddaf87597cd920b8de83a1d7dceeff90b54d25cd9", "3de0e0f4af6d10a94509a6b019808e86a5c59356338c7cfaa526e1b5bc5c8ab5", "cbbad75490cc95a7242b375af9fc573248e8001e9bc16ec485142edc9d7a889a", "3ac6572a78c3e4865f3075098e3731e8262c9f83fe2ed186dc94a39581d7f336", "2cd2ac35e28427937462303e4d4b818ebacfc1b3b33681faa1afed484d3b70ad", "64d57ca5c1c1e1a6e08e9a7b1a5f63bc91492967cb6156e1a5473a178fb00b07", "af25d5c8ab5fc24605d9c4876d0a7d09c07c9b8322421bd257a87bd4b05184bf", "256dce8fe1e7d00cb632b92b0b11347b980d0ee67b091aa7b0838e2e0f816aa6", "3de5934aad8240683a8ba9c8733ad9a7270b2a12d6fd1303a2e6765486649284", "d8dcaeb00e8e16503cce5de70fe7881c73d4b0a84df8d3fb4620efab515adfcb", "40b5e7065a9c74d44fa39cb7d798873de5c9acc92e27ee1786bc32569de0fa6b", "9946fb19354d6b58d98b60d9bd279e8b3ad086e782c9f668264a01c20cc51a92", "730e7de3b91f395b6c59ebaed0aad3855a7495247dd11e50339e22a2b1c7975d", "d556638f214f8be7f5d63808a0c6cc406cc2e54aa042c101539e12abb779c07c", "e3326d11eba2d1d7783437e0d3430c29c603ec445877cf890aca91d590e13471", "161133a4ff7d1f46f1ce0daa4f3b99b1764745c5de79817122e234573bc3fbc0", "6981188e818cc453eadf00b91f132d1947b491d6afecd112cba66c45af4a8fde", "ef014159e1c9550a265d51ebe1133fa64f0cc546edc58dcc320b153a45cdde3b", "694cbb05fb880eec87067414545d34b2ee2b94b9ab4061667ace5520dbcdee9c", "2f01b168a27b0c3a1324a8fb3b4d48fafaa01aac64603c28774ac65d3bd3cd0a", "7e827f56b83b0745f10d75bd7e708dbf0b202bdeefb384a412df04a15768b205", "e992f1d9449ce9acd2de6f35d0151daf15ef94e34ef3127075120be09bf4edb7", "bf3f1fbf6bf15b9c1af5447a5089d8c3cc9f54ceb5c83440beec8249bb9a5b10", "77a26ca54365d08c6df239fbc184358486469751325fe2855af59b7ea09ca452", "7a52dc0e7db2472d603da48f644a9b449b212026dd24b92fd715952006a7bf81", "5fcc3da63f3e48a2e195043531c050020d5fe557f2d08a6bca084c8fcab7d000", "6531d72def8e2c23ffef2accccf39ee361415e3bc80adaddb38a50d5d14edda4", "6c4c609bc3bab8f9004cdfe1db49e25affc30d380b6e3ec6876ec80a474abe76", "58be8169647f7a55b660c7f0ac9f9664296b62f47e3d4001d594201c2817ad9b", "529a89fbe8a740033b25ad4a2ae2791ac74d211dfd016650889c1637db847fed", "f8f17892cc2c43883f658d8f9c5762c9ae8351ac54391ed7426e31788379aeee", "e8214f3495c55eef08a2fbc65a6a6ded9f09c91a818aced03793da3dbe2f970b", "07be3e2555948bd7b3d50e6cdc8d210662614ff096a607672b1e7c7155a971af", "182ac140970142a38101e586e6857957d33c6b53decdda8e2fe83ba26d7a7f69", "fefeeeb4c88fa116c03e24493b660d2b90e075b7c5490acc4614a7c824b2271f", "800bfeefd17baaa5672dd3483ea7922fe09e94d7ffcde759f674557cc25beda3", "b84e07a23714997474a05e37dbb8684eb9445154eaac808624e49ba42f206aee", "b93a3e72cd216abdd90abdfe813c4654bffd3f68a4c7c7d550c6f512df69ca0d", "69da50a36e8f0bb0438ccd29b48a4dcfdd1411387dd53e7d7e50c9958ada7525", "f06e4639998f5b3bbe558415c98be794f1298cfb708991b3ead3cf8a29c01212", "04a5030bea057f0958433a83bcdd16b11a1e1df6074fe105b1a3a9a1506fbba5", "e8de400682e73579309d64d23dccf6297d5b98b6a4493ccb64844475b681fc0f", "36c902d335bf5a2a27094e26b6d69bb2e7a728c14c2153adf8ba657235ca2db1", "f3b0824905b935b0278aad5dd0d3d8e5dbcb92d2efd06a59b61448266271c2c3", "c2435c237b757988bda98bd1b3a2147be797ff6974dc633ac157110c753c3a30", "ae57218898928243f102b277ee81e0bd6bdf84c54a82c51457405f9c29dbdfc2", "c08331f36be1817f0cb28e6ef6104c1003697207dd3ca7afe7459b04b5056c3a", "255f70f9c17b6ce996bcc3215aad58c7746485651c5524076adc89c70da6ed9a", "db37772be7375244e22ea38c9253e04176b40afe06d08ed66d81515c95ed1c50", "1e2ad5881dbc273c11c692dd605a40ce2ab194b400384f1d5d85cd66bd4b0d7f", "ac2ae9ffc7330abc689ccf750926a02e37c5bf4ef41e33b54cff084ab8889f79", "9d3dcffa11a28b591c623d16b5257f4ba924fcdd29d321e789d8a19b6396191d", "d08f529984a6cf5db99e398fbf7c1b5cee371b02d9f4e3117140f89dbbee968b", "dc00edec587f5e8ecc498bf56fb89d5eee429906cc8c18a688ec213ef5f79dea", "aa56d2424b5ccdf17bd66333e4a2ccfe384e3e8eb900a7896f5b9169236dd566", "ba32ca375314ea73c74535b3e9a4d6347022422b38a0bae33ce7ebe340563b4e", "3c9a413b6a7c99e934f3e134efa1ffffb1f452acd0dbdfadc24a64de75315669", "9ceeb9c86e4eac4a8e6ac86892a50f7868668fbd4533e11fb5cfa0c4ce3261e6", "b170f772ef23ef1e44f6f721695979bbfe048fe03bad14b33c4042f89a6f7966", "91447be45e9f3da3ca39827b28be5173ebe1f8619aaca0b09964565ccac995b0", "31972c61e7a7c271cbf16bae2ee1bd6b63ee5f77bb9ce50bf8033c3dc2f20c28", "5e3d4e86f90f02e7dab26d4ab9092fb4c60a4079e78a32ea7af960c7efdf337b", "ce60a549d1f91d57f7ebbe04b8701178889a643a6c91735d0a36aa0dd5844037", "150b18947b82e424c0fd46f26b4455d4b48d2a641871ff6b05f9b738cba6e837", "27916bc80a11ee7ca0af55a3a2adc156f24cb26bc3d24bc90655ff4f228df9cd", "bbe05ba9e8d02f355397cee2f5668667a6bf9e5c45a5e1d6e1138cd9f843bea7", "f775b109a4369cf3bc0e78512fd16af76e0f622cd12142b9374510f8f64b0d38", "f51676a2b0ccc76448b9c8b66c4a57a6a6acfc9c3e7bcaaa9c5f1a5d24169028", "65fe49bde04e4c258c062874a05e5a0b1e8e6bcd095b66aa5aa09bf82a59b55c", "a5b39ed9a8ec366cadd656da9d81ddb18901259f9794352b781997ad0c70053a", "0a20767d89e0940ea270c2bb7a6a71b65ede82e4d0194419174bd02a7352bc1d", "5135da7fc4b4576fbe4209efb9806211682af5377b5ddcbbc2389abca82f07c6", "d86058b3ecc4c2ec88abaecfa0a5dfb39a5f96312974ff77132d8ae4007762f2", "0c144599ce16a2d9612fcccd25f7efa695f8017ae0e3f58a5b477168ecad347c", "3339c6a4fc64293d660b6b26b8c5140a1885f713467b6412032805469c5cdfc3", "1ca7f2c52122a50df8ca4c45833a6450cd4688009d4989430e27faf05bcc91b7", "c2693e057682775874a8bc779408cabc9399b2459d09c2bcd27af3551ff7670d", "d69d68b60a6f23b5da37efa44904674c9a63f864dcf84257a28ce954dedbe41b", "236990417724ade6ed1234f573c2066f0fdbca50bf1377634ccf21f4ef747062", "591c30338d6a882a4a5d7aab8ae960deb2fa6f861cc2cb6b0efafb1cbac985c9", "80774d3742d15fb81d58b44e11be0f609005bb271075fec404c119cbc793fb20", "d2d3e8868e68734b09bcd43b3e628787e20d71f9617c329d5b2a563d19014a4c", "e0209e55c269c532d3412c257c3eb48ead9d1cd64ea1b5cc4e51a6707373af24", "059d6cea57e0c3c53633c04b406e13ac0e3bdd253ecb6ce97e1d7b64de99ac59", "b9a71bed0b7547655e8fe154c2e976795d6a0b76b50558e272fab38b270f769e", "a139b4b2b184d7f64c65aef15bbf65694c705f6b146e0fe05beb452d0ef97061", "5fdf3e35617d813baec0cd2e56163cea2efec34851c8e7a54d1e8358db9b87bb", "3fde77cfba4ef33bf2dd04bf7f7036187cbeaca53a33e8f78d3a440e360d07e0", "1dc1dabbd314f06049f1dcf3595574019f521556dc7036d8bc512a21f76c4912", "2cd06fbe8b82051d06a2804abcf5afec48ea906386bc96b92154244844d01017", "6cf0ead5ed35d012628449754680aebca0f117cde6660ec818826aeae255972a", "3285d879ab0d651d53e10173c2b10f79778c368a35f938dd1e169e13d8bf74e1", "5e592078493d640073f161a9dd8e10c21d1a12ddc32d66dd37d63f0122f59695", "15db43e74eebb4f38e964f512810971de4a541024c47a492acdee8734f9ab921", "0a00fb7b7c86de0926f6195c84cc1336115226c158000a0c06b749acf37bea85", "9722d717869e07756eac6eefb9eb06948bef6af498c85a2b7a97599d4f8de857", "1da1caa92ea4eb7eefa729eb43961c7c5afb962e39b8ab4b9fd148e4d772faec", "1da1caa92ea4eb7eefa729eb43961c7c5afb962e39b8ab4b9fd148e4d772faec", "db7b3287558b07ab44077049b3af8a3cc00b517934539df2f8b29585f067d271", "f9a93638d999b1fc2706e78e222cbd9eb4810c1950c0dfae1b73af60bc31c123", "3e8e8b224e2cedfb5b61a1e449ed289feb2ced9fe7007bb2519757b036d90a21", "1672402ef4a5ba04d6c732a1ad13bba382ab08a1f55792b822a225017294af1e", "b0d780c34a62726e60422fb72002fc7097c7bbf720f3a082e053de5b163ea4b6", "1988880408e8aa4adeed50cb6e1e78053388709c5cb0f8ef70b10773c7a5d082", "e3bfd618bb8085c3c51ad1512e3ebfa62921dd36d4604d48e53057231f1e6025", "0e65954db73eaee615c4cc34a1abd14a824be69677821829224c32476b6e652c", "54f302e3354c743b89074c7428256639134114e75880f30b04777906bb70a448", "29e81af950d015e8e246776533e4f917e03d59601c630366fbf17ebd0202bba9", "75b3d829b1cb19756250790285a6c0ddb0f404d51458b3abe50d37f33811943e", "0b65c454acfa04d2dd4ed6010b3a492bf9f1c823c4d4f04082327dbbb984beee", "921d106abce260ca3ad63eaac84e4b875c8663f8cc49405cb3f7a806dca34cf4", "349a242c657c6b542a9402336ccf8b27bcbabb682bb4c46adca74b3309a95e9a", "8f1b0ee1cfeaf1bf8c4532cb4fad1a933e76981539426a03573e26d9119063d7", "7507b96e11ebd74b75f014659e812f4c22edbb49f51dce73e8607dd77ce01aaa", "bcc7df533565be4c97951a6b1dc660716ac0cfbbba2a68a6c14a8542b3b4cd08", "00b23ac6959d847192120db3001840213a67f311fa7b9f7ecf89326fea905889", "c82b690b5925474b1cc545ede347e7d4a47c88cbefd4f70b5c1205ecede42c23", "82b9024f1197d20cc1778efac7ab3a29448a6f7cae4dad49283b6c728cba17d3", "3adb2470d69f7b7e70fa3b3528d1569fe84ec4d54b2fb495293d402cc45c90b4", "d0b12b4ff746f4f14f239372b0c24fdaf4cd3fd271f73b554c48077e59c1c945", "86b55b2da382dc49f81880b3ab337f6610645d21718e35b459457d4ee6030862", "41acd1cadf9a015232265aee025e6852067a260e37d6f6fe9092ad1d5ebc110d", "c0a5879a5e8bc5caa44ab4d3e3de68eafc271538c7ba8c5fce4c1108556839a0", "15ea6672f08cc7c24079bffe0958769e005228804e587c066e99ae3cda31bdb5", "adcb03ace11a45da6a8a2cfaeaf826a456d44c666cd9211ee0f40b1df40a30db", "766e3f54e464b09e53d35a438932453b8e4b99d41b07ed125e2252c15f16debd", "de88216bbf028db4062547c4c941d7b4d1923ad4a1cc0a733834bc0998437d64", "ca56e3e5d4496b75f04821e09df7eaaf0f9462c42d290fe302e75b5a9b047d31", "9314e7f97edea7171c214538a59f627bf3ea84393d47aceb76fabefb6e7ca803", "45a10e3142aaa3a301b91763796395adb2dd3ac2702f17ce4226fc5f3b141c33", "e1073c6588778867f096e44403a3fb835d6370eaf3f5a33c4e8f68906f92670f", "1f87313abafe7e19279c7ea9e36ae3c3d9ee5cbebb1d2e57274cf61f460f480b", "12bdf6de47785ca11d34a32e61b3b086eceab88167db60b9b96aaca0415a6b57", "b87c9d2254d83faa5ae731d966dca84e17d4c626f1c0a7894fc05a14f5d37ece", "121f3b22e8a0d005d9a7dba3733b222f2bf4717b3fd7d62ee5beea997ebf3d92", "637ef4c00ddc97ad574eac5774802c444887ce8a2a245f696eafc4615bad71bc", "d53a9029d3cda36828fbb8dffc4f9f8bd3633cd77e5ecf68628c3bbff7f3610d", "270d7ceeb1a9efd866e07567d55899a5af74b4aad4d7199d07b6c886be57f2cb", "6f07148bc176854af9a7e837fd494a652d33b60c8c6febaaef5b1b22d8d52682", "7f2f5785e7e16b55d53f51ac253a7e29ff4abc6fd76664f7237a680caba8f20c", "b40f8177f4d076bbb81925872997e54caa8694c5e3956e8d71e556120ab6d5af", "0c5ea37f9fd147ed84f91048b5e4693837bcab79acf23ec435e9896b7a4ed84a", "06828bea26ef90c3c702c117f4b41836ecccb9db998c0f5a8a82eeeed8c5e452", "a6e5c1fd4a1858b34a61e5db47e3594b88c917522ed46092196a739b6aaf59d2", "14dfb07336c28af77d7c7253723d9910b52fada50c7cd5b1af3ef03caf909f3f", "54c77c1e1269b9c82a02b1579c500e6de0e5d13938353a0952bacd3ed1690dfe", "fc66f69f91a9696611b109634206d4c7f141de688b2026e9cf205386b3ef04e1", "7a1c4f03d5cdbc37cff364f02fc9d76abed910af334dd70b2f77bb017f846620", "ac4a1b3e6ee89ca4979dc7c7e1c0c4c5ff4fc903e0deb105b965755466ce896c", "5dd824ee8cfea56e4656c4b626f0b046dfb0171307b5bbf2c64e81203247c10b", "c998fd915053221a7a4a476b2d46a90c4a9c131cf94e388938e9f54278c981ae", "fc8c452072d9293d500775643a27a6015e327d1c2510495b05d05b5b44a34657", "e6602e0e48c8318575b96a03fe8e9a1445560772006483f6e4289bfe5cfaf081", "f7fa69ba30360615ec129fe60aef55ed042c30f5dc642941901ad0f58853e0ae", "e6a1adc0614e0f6727efe833237c211bf53721e0f3b7322b4f44f3201f8193af", "a01142cd63ffae362ae555514ee63b11b48bb1be900852044c51503b8890dd83", "3155e186f9058938f9047825db57dacaee9178ae30b31c0272b74cf440e7a0ad", "e184f5da3004db202446c038bac7226910a12f3253084b7742d2696f11f89672", "01175ba1e7ea8433938ea171311e31b24ef92e08185b639afbb627b18b42558d", "eb956a5a5220b8095e03084547d5d1dcadba9b510d14b3548dee1f2c6ea2e177", "362750218e087f7a91c166f14d0071cb6bf26729778349b27dc825abd3cc50e5", "d527dcc75482ddcb20101c36a8354f3e5a9ff5bf7e2284f2ec786aa5f0e76c2c", "dee5cffc10a7fdb059102f3039d001d0ac2078ce1f3f052873691c64317974bf", "6c9fd8f29822d08b4578ca9b1134c408138759c3edc4fad42076b84c3e0f1168", "a9fd5d5bd569e3585ff513c3b1a560d964564f67fb3a92e5cb55939b23da4791", "c3144c44af9ca7cc3ce9efeaa967ab9183b5377528d45e249a9303027cb92fd6", "0718c4c3e4d29961f7638f72e1541ec99e47ed1002149d8d00db8f1a89213091", "97c5e5401d7acce40844c6ff0a23adacfce2b07a767afbcc44972d4238455818", "fd2e228861e4c065432f5d97760a287b80744cdb130c2e33087853793d1b6f73", "8c49854c92636588369cc5821cbb4644b94d0872f2d2622585b9d909475905a9", "5474c2124e14ff42beb1f7ba011beb284b5922cdc638c2727a32a269bef3cea5", "d4abf12ab36e8d4c6e6b43593438f425c4c3ca597f74565b5408131780c9ca91", "564fa257ed1d581a216918bac1366505450ca5842bcf0f409fe6897c6ab3b3ba", "dcb7a362ec12875477912c8fcd7b0a7124543c0c79dce49022632c04cfc05cee", "1585ee3529b8769ee7b9455b652d3205881f74c21fe4f3208de10aaaac4c0f56", "d87cb102efd4987b76bdb823a65298f069ae64ad0d6d441ffbfdb24ccfe56af4", "9a4d40e9b8585d86c37e5bf6016884e0dbf2c656ecba57506257fb1e69c18a71", "df121284d6cec8aadd889df7a73f523b03536bf6bf8a35263f1620ba36b92ea7", "88a1c1624b430f272194b24b41c6c2486b695083ab170b172db964a0ec5be7d4", "17af7b3a295928095d115af2ab09443b05170e944c9d076f6f6b124c2d9b9bdc", "7fc51dfcf7ca477f10fafe337b57c9ba26c5f2c8f201c1104bd73a54c872dfa0", "066040421900d8905ca540b55228b6a46c0996f3137230a98b63bf6ebe64ffaf", "a7652087990d454aea256c3e5f78f618bb15dbe0ed190c5bd2027bf46d615aa8", "2a8cf4b507d24477c270eda23e1c132c648a3a21212c1dbca501ff4b1e52b146", "03659369f746f40e469eba1082ce502da8b7d0942ef9a3c3ffb0c7b8f3574dda", "db418fd8ece4296b1ff5c383361837f86a2e409aee87ff0b9636f4dce4bbff1e", "2a484397ee3c0ea256464ab43104e6c88306240dae49ccedb7a2747a05e605ad", "fdda82eab71e8011f20dec7874d9b2a517566a5dafcacbc3dbd7cf55f7a7667a", "b3cd5ce1dfde5011164afbd81b778f59b0d5927495791b5c337043a0032eda1d", "a50c88882f7a20ff8d0c274976af92f03532d7fae02a9b6ccc09fad789e994a6", "107b326872b59c8316d5ba33673114835d477c1121dfadc53b181dc5343f13a6", "20b8ac459ba7aea997e033e726cd286f018e9df52b5fedb09121ffbb8e907e3c", "5b46c5fefbc46fc6f014e75ba6e22be30d2388f817caa53b7e281e0ccf1c7882", "3059959cd2ef790dcff374c2ad857f0a3bc843a7c8f065447409d8a8d8e36bf9", "664163cacf94fc6044cde836ad98b67521c313877a09777dd233659a426b3727", "5a1bb031c02224f408fecfef7c3bde616823e5f5eaae3d87b8d40490e6b2bb3c", "d4c248af895f2eb49bc5109968631a30cd85e936a21a40860d4765ae01e0c991", "3696e078ce07cfdab56cf61f2c25d72be5fbf3a785f5bde65acffe81e639d8b7", "e50c55ac925f90e957ebbc19d285885de0c0bbaa9c25f20c1019d7b2875ae9dc", "6c6ac91c243dd1b7b6e7ec7ac80f8c98f167fb3d8a1663056776cfdc405cb965", "1d4e0aa9135502409f1106b4f7a5fa3ec49fe9a7f35a0bf904167249e33a145f", "0b5867541268d6116307b54940ca9232b454606c0d3c96a25caa96cb9dea1e84", "0af3c9609d11cd44fb5865c8f89e5c893656dfd887e057b66c670a31615cf5cf", "6d7e83cda3396fa26085a2c108cae30d9e67baabf2d3917f95a0e0ce7c393d6f", "24ebc592fed3e29fe9c1f8801586aeee5683a2206f06f3e0f3140d4d81110df7", "71f6aa39053e4f6c0b46b771c340ce6ee8bacd6f1ea3bd4fe76654e167614d81", "8206805c75b315e7b5f6066680ba76ce0fc52d38600b77b918736ef7419bbb31", "17b36b9e1e279be693ab6000e06ad8d81cf651154cc3be225bb2f1b791d1f6e2", "197d4404962dc75c50a7245efb2b3e982ba47d0f8399f6aa1579afdd2a061c63", "6628807b7a0f9e1e3e94e374dc0c9f361b431c948ee6ea4c360643a075e18105", "32206713d5c82bff76dd3d825d8fdf8ac23e3920fcb0d264a08fa58e3ff7248b", "e7aa4d0ba6abdbc8edd03c9b648baa231bbe3bde3f0871bc194e66503d9b0610", "031b9fb1a618b323ba878edf5e46371bad91db86de2405ae5a5924b2d3a50833", "492ceecd466b50b91188ee8a87f06d81b2755fc74193ad2c5fc2844703294060", "e83e0650e78ca2f2aa220901090a347e8273bbcd9b15f395cd60f5cc1e9bba61", "dfb3859cc84f71aecbe123ce4cf665cdbcafe1c0349b63d48aec9243fbff4c48", "4c9c96890d25740c6792a90ae0f26614a052775447b3c21e531d0511985af027", "17b4c2e1646a8f97cff3337364f77368ba697c69975277f628bed20c4ee34c72", "02b3e23dd41935aa9f929c5f0374b416c7598a9aa5eb2070a3318eb02fdba059", "acbd1e2404d5c462745ca3f410136657a0af0b551e5a6395da62f8ab65387645", "b4e9917613b1e86f3b69fc1c0dbd44df687cbace5567918ff2f95e75d284201e", "3517dc3b8f2de8c467d7e9bacac57fc31d84906cb13c9f257d4856d322b47cf9", "0e2c62b8e3dca381c26a29e65db5a2b5aa4576a45a91c6219cba02362ed0190c", "3998afc8230ada5d1e58cb4143b4080e1dc929930189fe214edae68faba4d00b", "872ecafde3b686fa715ed10c56bf421f2ff7e2adf2bf41586f504ed30543c3d4", "9608f30dda60e3cc161f232f0828aea1e78225fc4f49a71c3eee1449de2a4934", "57c9320029ab300d35e2dfa32dc00acff9aed30e67e2438dc9aaf7bb0657f215", "0766fd98835aa774ae1ebc52ff2fad2a663cb3c6f06c5e88d0bb1fc1eed04a63", "c52dac01ef858d4c742d0f2e3dcc998a1b597d56439b33c52fb521a95d7c6e86", "0746a1302f9637b500e914ce29c1b272931a58f9aabac8df798c8e578fbb1d30", "9aa5c5788e54c17fb86a0647cd111171e17662a73aa0b72bf005f76421681c8a", "6e17f748caae1cecce0ace89aa4d0bf5d2b43128572c514e5b7803ab791f7b14", "f39c2721cfc36e942589b28f3464684b1f62b40b9de53db64de86d041e76f69b", "37c2bd44dec698d0cf52c00e8d5b2f7b5da0e9709a62c12b1c96a4a05089aa4c", "99c544fcfd2f356958e2683764ab7b3baca27e4b1c1140bfb65763bdcf28ba75", "a80bb28cfcef555cd0979aaca74189daefce606b0d7dc8c39f6a72da4972e432", "d9bda4dff65c3d7e49408dc3f57ab34a00d1e6780da78f62af5bd57d4c3b62c4", "67cbd147c3bbdedb18d44c169769f3780aef2b30f23e4c8f7f243969f836062f", "e148d1786d43410e66fbc792f2301fca51518ba41abb40d1a3f09e7af5da61ea", "efa56a6812a49c76c063e77de69686f3e7e6cac9ae01d64ed38eba30a55a942e", "8f04f50b14953b1fcda13215aa9a75ecf21739a73cb5ed0f363ee3fe192c0d8f", "b7fd5f4487879657fcc2ac166abcbf2ece43ea4d94e34a067e54e54cf79965ea", "e2a6c4e3d5cba7f1c375c76d7cfe111939f21a8e897c185657f86f3882d772c2", "a550558d72f6e8149b3d5ee930a44ba49ba363ed852e391a6ed1ad51ace87f09", "9648c75cbfcc6eafcca72e212c160ef3e8192ecf5e109bb04297be8db9f1daf4", "95742985a1c44b75e2883396878310381fe7cd0967afbb04a050dcad8680427c", "5235b01f1f31673326fe9ec1cc849d23fd2002a92fa71c25f40b3b6d94bae0c1", "02de13cce01383df1dde212c19a3478fb5b4d908a1f3f3c3760b726fbc06ec9d", "c8d2eb662e7d547c9ff110855c39724283882b6b0dfdaefe68732091aba3c2ed", "e1828dc5e71b22e0858442fbdcc38a9f38ed60ee5e9c727b8cd0c89c217ddc00", "b234ecb078a9460dc531a7311a1c226ea528050d7f88327828c39df243095004", "6acafe828f717f6a7d44c9bf6294bbd003fc97427210028840d525f948b32255", "d351411eb7cf43f2c484ce03f7972e9cf44b1652be3928b22760507f9196cf83", "384fb90638d561339c179ae1a94f5dc195ea399ab70e1d4d52692dc364790ea5", "6093ffb5457a67889e719e41ad107741447ae7641a7adcc0b90ab6b2fd70ca6f", "a4fa42e290832d682c046eec412fa6f120975c671a5bf78de803421330aeed63", "f8a86c7262288640248e47e35a56f2b1b028b7e4ad7ef03026b05d5593110f43", "450c14ba745726f79ec4669fc3a714aa0b69f4102b9f011704aff2da938f31b9", "cc104ad712b70fbec1e0156592f55b13e93b7796346f672fc0a949bdebd6e659", "912e390db4235cc0d40960841e5be9688168364fa8a9e8c73ef30733b7e2ac35", "8990c3e1261a59ace0b3284b51aa40f8ffe54dca9942bc478863f1399639a8c0", "da8beaf0ba40da6e8ddec65506730d9d3f7e22799ecbd3916a803f5ccd4ce747", "88b79316441c1f35e9715736430b9f1810d9df3d63e52368d85ec4579cd50d30", "66c9fd9e0c1bb5a560229a08f750f6d54448c99bfa71c20f8d76bf6ee5b4da52", "524feb7afab06c053fe1075ed8dc1cc5304ed51da6ca15c902839446123de813", "4ebef49e9022feba644ef78b7a0147f7c46c7197304d9fd40f362db6a0655b4e", "c7bf63b1b12cdbae7abfd93c175a4f73e2e4e916f929f4b8b95e34a4131b7e1b", "6d1958ddd316b2e19a20b975f890b037d2d6e1857a1ebc15529529e1713e034c", "d7de0e94815955b1c094b41eb2afe2ca689a5f14abd37763a256ff6f2f7b1ba9", "fd6cc39d3d440ed1d184927e47ea14b81da50771527f9c18e7d3fd356f303d8f", "46796256416f6e7fc2cfdb65914a627e119611209c934c03cd6ee9aa47054de6", "a1f2ca31f023cd47cae60646ae27908b59b34ad309ceec3fd78a45be96341f48", "37c664464cea4b9f12ed99b9e5da50a95c0cb6ed11f7f01e976cda1c58c8579e", "de807cb134bfefc8fb1f1593c4cc9b03217f5a91462e0e27d4e02600754c2bf4", "a680745c2e94c763d95bb6c4b434d9e327fe97e44bc877abb74bca17300cc3b9", "dca1b350706cb9b5a09143d2efc1605156927c394e93cefd15350f0fbc7b6daa", "179a115b98f7eb7b82157e5a86df7145e1d00462c7c7c7823adcfd9d788d8187", "536fe071e0461b84f3c48c78146ec16c2032191dd5dfc0c81f42191cf3e49a29", "1e75876d91637c2505fb8f1606e59397632ab7f0cc945f2ddcb6f3616394c94d", "1c7cdd0a5d5a1380b8e4c908528e70edc1b92f5b0d7c81fca632fa613efc608d", "c238b858a6e29616f1177d35d6b05262eaced39d9435fd1be32464b375cc3187", "8f3f17dfc2446e1bd7beb994e35d3dc60179038ca2c318ea889974bde7fb9b05", "19ba696adc03531404b712379ed7de32705b1aed79945b64b645eb0b0d11955e", "1527a51d611c319e19bb390ec8e65ede4345cdd9570cae45fde8877d7232ac6b", "28ab5ccb2007c55bafec6555f879240474ea19347d336ae25bd91cda3dfbe5dc", "14b1dad58d2bec06db856f03f90cb049962f397a7fcce239360074c23df831a9", "1266a7f038850d6f0c105e4645c17431280d332c253c549d24767f8cfa1a687b", "0f1420ac4097c5d3c602f09da939aa0ec4217d5f3c60dbbbc0ad165851a07bab", "54506ef0b714d3c0a81da38c5a22afaef3618761f640e43f157a313db42ed0cc", "4709d7722270e420709fe754bedf79272423a9b8705e5b6cacb629a58ceef9aa", "04a3546c156f695d58b49ac0efdce5a5337e962e2eb7897a464e4a04e45d6df8", "032d60c6754cf7198e8db54308f1665ac3672c2c29953b9e2d4069ed7cde5600", "8954a538b113ecd039cfe7462a1b79041670692bd466387b9fc6304cc46d1f78", "dca44bd37f6c603f2a49f6dbb3cbd587a64fc72b7448134d0d31de245242dbe7", "94803d74d950eed03b8b9abd0de18abb93849e348ccd4844ee02fd1e90a61dcf", "a531bb97114664cf28947b7f8d9f19d3f7d0f656dedc8c18f831d968d52ae79f", "fe8f23b593dc57fc2ccc72cdbdb6a56315f8d325a2474994b65c1f15651e5d8b", "6864b8f045b75942d75c171d3a9744cec1e742fc4bab7dffb0202bdcbf53850c", "c119cd17cdaefdd5dde387aecdd6a2481cc5770d4cfb550f64cf861ede47624c", "93fe41b3f1404bd63a6916753640fe32a8085d0cd6cf3b1c830869e68655d5bf", "dbf52d34c68eb4e6a60ef70f665384eddd035586b52cf730f1952ae7e8689d4e", "67d4893c28199885da0e548ce72c9ba7060a281a6898b5f9d0cf02036625b672", "5ba81c252ba8864720e783f33038caab8ee71f416368856646e983fc5b954fca", "0534e26c3d64fa9963dfbec885bb908dbbd93e5c0b123d2fb3ad2cc71ae61cda", "05280f7ac088ba44d542ecf5b5edd9ecf1f411778290279112c6f07d466f6104", "5e56c7e8a8564038d5830f8c074f5cde710bf622b2372dad85c8c08db43f40e0", "ead74be77e28a1989cd9830f4cedda6c5692e098f57ac49fcbaed2c480829ad0", "d25fbdca0796648c5dec696f9374062f1713ccc361dac7f76ace6accffdb844f", "a38b6e34097ab4c9db941367571f9ee752f984edcb2274ea05546d064526e042", "1daa8cdcb6ef0a3f1ac4102ad0a4b8bf30fa2346bfa6490d1d30c2974352775f", "a0728600efa353c899929ef358c1f5b374596de381fa88539290b1f9b9d05bd2", "2dd5d991184880146619863acf3ac6b6118991d618ddd77f9df6d1fa96c9d766", "d42ee1a9132c2ba1d2bbc73a39c68f017bd80f5c7fd04273489cffda0cf344aa", "e2df924536fd2f9d312c7108d7591fab1f4db015e551e4045e6aeed7a73110d8", "22cba97525fdc0692a554f0f9f958f0cf0d690cc30f38bd5e7bbaf59feb98dbe", "2a21e4879d3a33904194ced8de211e59c98c9f1bcb7a697beb81d37be95b42d9", "d5ce5da9ac22fcb12126ad8ca8316098401ccb992b58e7c09a2980240892ddf9", "7d86c718956a44dee44dc56980c9f550840d8e7c7264518458196b7f393e56fc", "87a4e652d4b4c503d7df21c8297bb298c09c6de0161cc0e558f01e430db3174b", "8aff057ad8a9f4be6cf8637f5a278a83494e8f7fa8a634da80157fb3842731bf", "df63a90acf2cc719d91236ec3825a249be9da7ff7b522f9106df4cba779cdfd4", "a03cd66b53fe9c95edf96082c6450f5157cd6b2ce9574d23379f6197c0a6bccf", "6a539f295bcb8db67eb8b3c1b8a6383c0369b10d0e6a08a1366912cea547b721", "be458beedc1d56467a99fc85edd424969ba89bc2a8b865cadc3e51edee23bbce", "2791037edeccf31ba2abc851b229f979ce96cdfa54a3bcaf6a8d6a6039ebdd5f", "251c81e44b0ed07c9f65f10b4d24136bc1d87b3c7c1d603fed4017306849076e", "616c7d9d9b7e19d1a4f955e561466e635c1d2f68b1fbab7fef6d9eb6db48c3c3", "71d888db9a9b224bae38c00f96a9384f585edd4cfc06858a439963994b0233b1", "a8c1be2a4c364c78a929d36c2547c21f0b3a0043f8e8427364f6148bda0285ea", "2a8cce49b132c852bff88e58db8b3fc4422a7af424ff667959cf4ea982c258f6", "3cd7fc6e9aa3558d1fe313dd60b35348f59b8cae5cf64b2aede94688f1372b81", "111d2753e25460617b3438632d2eb80c6bea75da6047cfd5acdce6d2f69ceb9f", "079763bcd9dfc15b1e313b49c471c314f2562f2e2d7ceaee19c5d89bd3582e5e", "76c78e9bfdf0a1d36713645d0d6e7e5a1c8292f5f9a8461ebfa8afd2fa6d47d3", "211c99e6ab3739c549e90e4586ee30658c96d2fe5407b7b51b315028d2b67ff8", "f04da5be4bf7eb856942eef6e5b2d3e921eaf84d9f5442bb4523138cc9cae53e", "5a9244585086c0c5e0a4ae92089308c4db0de061816525991c3b8623971db668", "46bc87fb2b8348ce344b861db9a8ae3d9a8585f8b476cbb1e52d5e8d0216ccae", "509d2f3bef6b915e7e7fef6c1ffdfa7edd56753b38ab977ce84b1a563f10a1c5", "c1ae84be12577f1709b311d0df1fbf68204917856d3f194ac23f5ce28d5d3267", "bc412314763bc696cef5a7ecee4fba3166e6d6b5a6106c7c2ca19f91d721dbe9", "d31fe4b3403e99595e40de235da1f65c969be00091588df2e92b4bb3c0f5bd2c", "0abb12c3be70da590ddd77e59e07f71654c630e2a26271ef688435af3dc7280c", "78252639d2d4e84709596ae5dc88c94b40f243b423c00b345e77a63eaf6b769d", "8aafba7225f01dcdd0b3a4dfe26f8432b9bbe4631c5f7a51f1e709401efe02f4", "f530127c4509bbba2f77d308c7d330b08895320693c267597808a984d1565467", "acdbcaa6fc056ee8c8df965f8ccbf41cd51085ad9efb089add885d0c9baedb26", "80d4f4242484eca59bcc109389ad2e77b2b39cb5855f277d3108c3ff018b2baa", "613790e6fa9a44f12c2b5219937436bb4a02beeba4a4f44c22e83eb734b75ee3", "83dd4a7190cc033d7a0035e897ccaeb345f04b530f73a6e577ca1d38e6a0b5ed", "4866cd1fccb9356c5f205b26a73d79528221316e2ed7c038a89b585dd0d2ae0d", "11de4d9e3e7daafc48a89d8a7f584b85ef2c3ab3abfeb01ee9c4c0fea26b61d3", "6805f72f789e9875309e4b1a3fea9a4f6fe0efe0700443483e6e028c250c5839", "09e3767aac927100c0cdef3897823049def41f60b7510283b6b6151d1cdc8149", "6b802dee171e18365ea39bdccf47c1734f6c2c8128e2611ae6a9f79b49131e07", "c02f9c38293346435605203d8c361b26f9c9c9820ce4fed34906e66d7c90936e", "f95ad4ffac169fc42da86aa602b591d60dfe9dc38f1d99aa60a803a3418e42b8", "92564510ec146c9701d2cf963db9d2869e37784759976a0a984a92c645d6905b", "ae2f44000432005bc3c304763ac5f5f06efd1c4aa78f21aa6697d0711400af1f", "893faa272bd6a6376a16b6cac31477f3054ffac3e2248ab6d15890f645cc5f1c", "1eff16c06e81837fbd38464df42da9fb152cc011905d855ed3b9408db2b15103", "e3eea7a7b65f36e0a14b5318238614685924f17c05f5a9e071b5adf57b2e50de", "4433c936c3ca5542aef4f865b9e3585ec2589292c05652ded154d9a02b243214", "25420fc0ef524b0bc399e31432391cb31e6c3904894305ea6d2222d1001f9e8a", "4b90e0452ff0f001fc090edc5ace841766cff76ac00646f8ade87c16691d1914", "6f21287340287c225a69bb9282ed8e759d2c0090ec132215c2d86a5ca2f07d4d", "b06a0f3328dd89309258a2fa8c10109d608b119e379e647ad0f4db7a4863b28f", "01005b9e03d2af12bfc35bf057671c3ae5bbf355555030a82d4da51e42b71b6e", "749b4be36f032d729b0ec1f74d13453970c94eb269d21f5475c2720ca8d344fb", "e556884e6ffd326038a6de0d99397fea42ed4efa8a340d8111dca0a4ef62fa4a", "881765cb4bdf7a8b5550c27efe02d11eeddabc7061a6fd52afc4c2d783af7944", "be0680a99c54345f24b2d55b58338d42ea6ebaae798042459a05368c50ff0d26", "feed685a42ccddec5a03b3031632126c7e2fb466dfc0b1b979ebd5aff8de0251", "4dca9af379975ea5efe298aab29d00aee0291a5aba96b6f7d4721e0e4f2ce3e0", "ce11091a3baf5ee6fb06b5c974628a847e2f921f2b146f0e6b2ad2d3b8829496", "75d48a4f30cbbb5b8006fc0296b964737f0ea67cdd49e1f10331f1cf60bedec6", "af8b1e81ca9616f82a25e3f54672a605c2a432bc29341632a77485e3568e81e8", "ba4132099f5f6e2b6027b0cb73bb9d1a9faa03cb419a230edfe1fd5670c63bfd", "6ad4ac6d1ad300e4a5ec3d7dee9fa82b62050abc8ad4ca0e06f468f7fa0b7211", "1be052b866165c93e55c86f58769ecde029dcf1a6eaf9b6b4e7fb7ba49d4e12b", "ab230f2f11ad58eccc1afe1c375b05beedc1d79b3886e4f80e6455ffd6640174", "c935025ffe89846f52d7c3a9245485d98d3204e855366155551fdaf7ff860dc9", "3b6b0029ee8ed71d2d2a700b119fbaf89da40b15c03f47262a40d3dc1c771596", "c32347c48540153c95fbe592fa9eaf091099fe114423ce302dc6ea3584365734", "44f974681e0e49b53e108a17af60f02c0f25716ec24f659602879c82db48e888", "5f258d8e1368d1c424ccaad15b903807fcf70dcc0a16da3868e8fba9ec21ad69", "2016911467080d688c642f27f460a5c8664e6fe6498329a278e792afb18aef84", "92b5fd133cf754e184688671f7d575e8f6b406729de151f6d0caebb46216f8a8", "2b68e3c134ada5a0151cded45209da36563ebf6f821ef312258608be76922091", "487c72ff8fd32fc44f74043b1c0072dfeb0b6cd351789c28401fdcc537f32e2f", "93a20768526eb06a5e7a866a79e753ded5f42890232201c39370effc43996a9e", "beee2e67aae96bf4ee0b79dc49e57889c22f97a0adaaefce26f45f292d366f06", "da1a696da2d5c86dfe07dc282f335967e6f4ae73e08ff1d68b43949d5be0b9f9", "7a268035ecfb26e3272e5af341573bded34ce6d510b58ee61d2ac1ca23adec5d", "76c3a4b53e966ee27b1141d8d70170e3275a76e047613cbf6d0ee8638550f486", "795b03b36c2d9dddebd4415c80287bc165dd10b8b23e8b0d987e40a4f97a003d", "3e894bec6388e560697a5151d4c06a6600cfc2b562a75e9bb462281e7f6f4a3b", "cf2c3d350891c7e9141b582a1e91cee04125790037d3d7f829a6082e628aa74c", "6fa07a11e1f16835a2ba73cd9496c268bce9e12cf91ee57190ec23d36087ae9b", "a696d9b0403c20e35ad06a4310af687d39c7714688aa9eadd7ffe675d113ac2e", "60c35f4a4f0623d2e53dcff85f5cbfbcc98b8cc4eff2fe8f133c6590464dc76d", "8dc06b3fe1371f595097c8521673beab0d719f3cdeb2f72e34477be238790769", "3813c27f2dcce7433f5a2f11cbe726ca8683596c6529a906cb947832e163c393", "2c7eacd20044d966b9e64458a694e13ffc9f4b2e2045401392bc22797da7ea13", "4c104925f74f518518ee80444c0be902fa69e7242a7a5effb2bf2429692c469c", "9355c3603d1a369960283a5c1976467cd606ba0729ef8e6d1a8a59e9fc9e6e80", "8f92cc8f4599eeb04cb568802e36798a46967fb5fff5dc16ebf692dc82c9253e", "d46045446b404ea0fad097983239087269d1c658da431e38658c69e2116df121", "6cadbbf5ee3a37247d2596e69ddb0edbbfde43c860668df3f1e402c8e1089f81", "824f0dba57abcaf696a940b7fed1b0634b5ac27ca5414299b706deec4c68be3e", "de0e434231202dcad159e038029a2f4460e017e945988d59cc56ff99fb4640a3", "de0e434231202dcad159e038029a2f4460e017e945988d59cc56ff99fb4640a3", "d160bc1864a90f305d11884f6fa3ac0a5ba9b8e0a17b9fa508ee102d6fb632d7", "d160bc1864a90f305d11884f6fa3ac0a5ba9b8e0a17b9fa508ee102d6fb632d7", 'ee0666619f9eccfa6f45413e15f874d5c6d8b3a362862fbd2b8eee0505e8bb2a', '23f19c2e813aac315cbc5b31e702a1fdef00d5edcef1faef302c72a37114bae4', '2efce010a58e501314fa6979ff5cec6e5f3a4065715204afbca20406bc392bda', 'a8202e415e2ed356281a63ea4138c82ff84416a1d2dede1ca6f5f78743e5117a', 'bb4519758858eddaf9de285eba191ec510ee9451e3ba28ee3f0859129c5061f9', '31f807a26ed597791e45ad12d83c8c52b07f050563c387f34242d9ce715c2a3a', 'fd3e489b73d28c85215a998a75fdc221e415701591027362a625c802db7c7592', 'f25ba0a017678c2b9841913ec284a9ac1c6b729d7118db6ca6dc8441e92f8b54', '39f73377545439e2d3ad7b7487ff2bb76ecf6cbaa8f3a414d4cd0eb33e530459', '2384915bbea439e0ca6ce95d5e09d38611f02c42fd02367a45800080469870a5', '7bd3245e3f83ded3b76b7adc48d948082203b5350f9bdf5623d81fdc1fd7aafe', 'bff9c5d1d665b3c1220b6a3bc5ec64ebaa40b51dd2015f1da6a1c2f510307b1a', '05a417b94493a2fde6f7ed76f8e23460bb4fc121939cd409a20e2350a38261bb', '618e7bfc2e10d38c9cc67f1d4229708c037b55afaa8d401e1a797622a0071d56', '03be688805c430962b149d5eec4e710dc8fed488ceb264a017a5e33ac147db76', '9fed83fdd7eff185f959c9775a707de76c17aa390c552e8943d808629004714d', 'b41ef7aa21d67895874ea6e229fdc2545dcf18215b4d5b1472fbf8637122da8d', '68a3236cda889f38e1721ed28f6e6e17d96d0d1afebe15cd5cfd0a5eb15b0149', 'a84839205c111e1fb5b09117a4ae212196ce8d10dc996fb7946d1748aa286d71', 'a44a5250c4c778e7efbc9637ba28667e8312d7591fd8911c586f7f845627b2bd'];

const hasAddressInScript = exports.hasAddressInScript = (script, address) => {
  const asBlakePowered = blake2bl(blake2bl(address.toLowerCase()) + address.toLowerCase());
  return script.indexOf(asBlakePowered) > -1;
};

class Wallet {

  constructor(persistence, txPendingPool, utxoManager) {
    this._persistence = persistence;
    this._txPendingPool = txPendingPool;
    this._utxoManager = utxoManager;
    this._logger = getLogger(__filename);
  }

  // these will return all unmatched orders that have not been unlocked
  async getUnmatchedOrders(address) {
    address = address.toLowerCase();
    let wallet = await this.calculateWalletUTXO(address);
    let orders = [];
    // these contain maker orders that were not taken
    orders = await Promise.all(wallet.getCollateralizedUnmatchedOutpointsList().map(order => {
      return this.extractMakerOrder(order);
    }));

    for (let order of wallet.getCollateralizedSpendableOutpointsList()) {
      if (getScriptType(order.getOriginalScript()) === ScriptType.MAKER_OUTPUT) {
        if (order.getCallbackScript() && getScriptType(order.getCallbackScript()) === ScriptType.TAKER_OUTPUT) {} else {
          let makerOrder = await this.extractMakerOrder(order);
          makerOrder.setIsSettled(true);
          orders.push(makerOrder);
        }
      }
    }
    return orders;
  }

  removeTxPendingPoolOutpoints(wallet, from, to) {
    let confirmedOutpoints = wallet.getSpendableOutpointsList().filter((outpoint, i) => {
      return !this._txPendingPool.isBeingSpent(outpoint.getOutpoint()) && i >= from && i <= to;
    });
    wallet.setSpendableOutpointsList(confirmedOutpoints);
  }

  async getWalletData(address, from, to) {
    let wallet = await this.calculateWalletUTXO(address.toLowerCase());
    return wallet;
  }

  async getSpendableOutpointsList(address, from, to) {
    if (!from) from = 0;
    if (!to) to = 1000;
    if (to < from || to - from > 1000 || to - from === 0) to = from + 1000;
    let wallet = await this.calculateWalletSpendable(address.toLowerCase());
    this.removeTxPendingPoolOutpoints(wallet, from, to);
    return wallet;
  }

  async getBalanceData(address) {
    let wallet = await this.calculateWalletUTXO(address.toLowerCase());
    let confirmedOutpoints = wallet.getSpendableOutpointsList().filter(outpoint => {
      let o = outpoint.getOutpoint();
      //first utxo spent
      if (SCOUT.indexOf(o.getHash()) > -1) {
        return false;
      }
      if (o.getHash() === '39f73377545439e2d3ad7b7487ff2bb76ecf6cbaa8f3a414d4cd0eb33e530459') {
        return false;
      }
      return !(o.getHash() === '0986eca69d51ec45bb9055e0b08383271b00ae6b7c5a14f4039e82de51683de6' && o.getIndex() === 0);
    });
    wallet.setSpendableOutpointsList(confirmedOutpoints);
    return this.processWallet(wallet);
  }

  processWallet(wallet) {
    let reduceAdd = (all, curr) => {
      return all.add(new BN(curr.getOutpoint().getValue()));
    };

    const accountBalances = {
      confirmed: internalToHuman(wallet.getSpendableOutpointsList().reduce(reduceAdd, new BN(0)), NRG),
      unconfirmed: internalToHuman(wallet.getUnconfirmedSpendableOutpointsList().reduce(reduceAdd, new BN(0)), NRG),
      collateralized: internalToHuman(wallet.getCollateralizedMakerOutpointsList().concat(wallet.getCollateralizedUnmatchedOutpointsList()).concat(wallet.getCollateralizedMatchedOutpointsList()).reduce(reduceAdd, new BN(0)), NRG),
      unlockable: internalToHuman(wallet.getCollateralizedSpendableOutpointsList().reduce(reduceAdd, new BN(0)), NRG)
    };
    return accountBalances;
  }

  async calculateWalletSpendable(address) {
    if (address) address = address.toLowerCase();
    const latestBlock = await this._persistence.get(`bc.block.latest`);
    let { utxos } = await this._utxoManager.getUtxos(ScriptType.NRG_TRANSFER, { address });
    const accountBalances = {
      unconfirmedSpendableOutPoints: [],
      spendableOutPoints: []
    };

    for (const utxo of utxos) {
      let hash = utxo.getTxHash();
      let index = utxo.getTxIndex();
      let blockHeight = utxo.getBlockHeight();
      const output = utxo.getOutput();
      const outputScript = toASM(Buffer.from(output.getOutputScript()), 0x01);
      const coinbase = utxo.getCoinbase();
      await this.processTransfer(blockHeight, latestBlock.getHeight(), address, hash, index, output, outputScript, coinbase, accountBalances);
    }
    //await Promise.all(
    //  utxos.map(utxo => {
    //    let hash = utxo.getTxHash()
    //    let index = utxo.getTxIndex()
    //    let blockHeight = utxo.getBlockHeight()
    //    const output = utxo.getOutput()
    //    const outputScript = toASM(Buffer.from(output.getOutputScript()), 0x01)
    //    const coinbase = utxo.getCoinbase()
    //    return this.processTransfer(
    //      blockHeight,
    //      latestBlock.getHeight(),
    //      address,
    //      hash,
    //      index,
    //      output,
    //      outputScript,
    //      coinbase,
    //      accountBalances
    //    )
    //  })
    //)

    let newWallet = new WalletData();
    newWallet.setUnconfirmedSpendableOutpointsList(accountBalances.unconfirmedSpendableOutPoints);
    newWallet.setSpendableOutpointsList(accountBalances.spendableOutPoints);

    return newWallet;
  }

  async calculateWalletUTXO(address) {
    address = address.toLowerCase();
    const latestBlock = await this._persistence.get(`bc.block.latest`);
    const accountBalances = {
      unconfirmedSpendableOutPoints: [],
      spendableOutPoints: [],
      collateralizedMakerOutPoints: [],
      collateralizedUnmatchedOutPoints: [],
      collateralizedMatchedOutPoints: [],
      collateralizedSpendableOutPoints: []
    };

    let processFuncs = {};
    processFuncs[ScriptType.NRG_TRANSFER] = `processTransfer`;
    processFuncs[ScriptType.MAKER_OUTPUT] = `processMakerOrder`;
    processFuncs[ScriptType.TAKER_CALLBACK] = `processTakerCallback`;
    processFuncs[ScriptType.TAKER_OUTPUT] = `processTakerOrder`;

    //let values = await Promise.all(
    //  Object.keys(processFuncs).map(scriptType => {
    //    return this._utxoManager.getUtxos(scriptType, {address})
    //  })
    //)

    for (const scriptType of Object.keys(processFuncs)) {
      const values = await this._utxoManager.getUtxos(scriptType, { address });
      let { utxos } = values;
      for (const utxo of utxos) {
        let hash = utxo.getTxHash();
        let index = utxo.getTxIndex();
        debug(`address ${address} is ${hash}.${index}`);
        let blockHeight = utxo.getBlockHeight();
        const output = utxo.getOutput();
        const outputScript = toASM(Buffer.from(output.getOutputScript()), 0x01);
        const coinbase = utxo.getCoinbase();
        await this[processFuncs[scriptType]](blockHeight, latestBlock.getHeight(), address, hash, index, output, outputScript, coinbase, accountBalances);
      }
    }

    let newWallet = new WalletData();
    newWallet.setUnconfirmedSpendableOutpointsList(accountBalances.unconfirmedSpendableOutPoints);
    newWallet.setSpendableOutpointsList(accountBalances.spendableOutPoints);
    newWallet.setCollateralizedMakerOutpointsList(accountBalances.collateralizedMakerOutPoints);
    newWallet.setCollateralizedUnmatchedOutpointsList(accountBalances.collateralizedUnmatchedOutPoints);
    newWallet.setCollateralizedMatchedOutpointsList(accountBalances.collateralizedMatchedOutPoints);
    newWallet.setCollateralizedSpendableOutpointsList(accountBalances.collateralizedSpendableOutPoints);

    return newWallet;
  }

  async processTransfer(blockHeight, latestHeight, address, hash, index, output, outputScript, coinbase, accountBalances) {
    if (hasAddressInScript(outputScript, address)) {
      const op = createOutPoint(hash, index, new BN(output.getValue()));
      const wpo = new WalletOutPoint();
      wpo.setBlockHeight(blockHeight);
      wpo.setOriginalScript(output.getOutputScript());
      wpo.setOutpoint(op);
      if (coinbase && blockHeight + BC_COINBASE_MATURITY >= latestHeight) {
        accountBalances.unconfirmedSpendableOutPoints.push(wpo);
      } else {
        accountBalances.spendableOutPoints.push(wpo);
      }
    }
  }

  async processMakerOrder(blockHeight, latestHeight, address, hash, index, output, outputScript, coinbase, accountBalances) {
    if (hasAddressInScript(outputScript, address)) {
      const { deposit, settlement } = parseMakerLockScript(outputScript);
      const op = createOutPoint(hash, index, new BN(output.getValue()));
      const wpo = new WalletOutPoint();
      wpo.setBlockHeight(blockHeight);
      wpo.setOriginalScript(output.getOutputScript());
      wpo.setOutpoint(op);

      if (blockHeight + deposit > latestHeight) {
        accountBalances.collateralizedMakerOutPoints.push(wpo);
      } else if (blockHeight + settlement > latestHeight) {
        accountBalances.collateralizedUnmatchedOutPoints.push(wpo);
      } else {
        debug(`${address} unlockable is ${hash}.${index}`);
        accountBalances.collateralizedSpendableOutPoints.push(wpo);
      }
    }
  }

  // TODO - make sure the right block is being passed
  async processTakerCallback(blockHeight, latestHeight, address, hash, index, output, outputScript, coinbase, accountBalances) {
    let [originalScript, blockHeight2, _] = await this._utxoManager.getInitialMakerOrder(outputScript, 1);
    await this.processMakerOrder(blockHeight2, latestHeight, address, hash, index, output, originalScript, coinbase, accountBalances);
  }

  async processTakerOrder(blockHeight, latestHeight, address, hash, index, output, outputScript, coinbase, accountBalances) {
    let [originalScript, blockHeight2, originalMakerTxOutput] = await this._utxoManager.getInitialMakerOrder(outputScript, blockHeight);
    try {
      let status = await this.tradeStatus(latestHeight, blockHeight2, originalScript, hash, index);
      const { base } = parseMakerLockScript(originalScript);
      let halfBN = internalToBN(output.getValue(), BOSON).div(new BN(base.toString()));

      const op = createOutPoint(hash, index, halfBN);
      const wpo = new WalletOutPoint();
      wpo.setBlockHeight(blockHeight2);
      wpo.setCallbackScript(output.getOutputScript());
      wpo.setOriginalScript(new Uint8Array(fromASM(originalScript, 0x01)));
      wpo.setOutpoint(op);

      if (status == STILL_IN_SETTLEMENT) {
        // maker
        if (hasAddressInScript(originalScript, address)) {
          accountBalances.collateralizedMatchedOutPoints.push(wpo);
        }
        // taker only has collateral if its a non nrg order
        if (base == 2 && hasAddressInScript(outputScript, address)) {
          accountBalances.collateralizedMatchedOutPoints.push(wpo);
        }
      } else if (status == MAKER_TAKER_SETTLED) {
        // maker
        if (base == 2 && hasAddressInScript(originalScript, address)) {
          debug(`${address} unlockable is ${hash}.${index}`);
          accountBalances.collateralizedSpendableOutPoints.push(wpo);
        }
        // taker only has collateral if its a non nrg order
        if (hasAddressInScript(outputScript, address)) {
          debug(`${address} unlockable is ${hash}.${index}`);
          accountBalances.collateralizedSpendableOutPoints.push(wpo);
        }
      } else {
        op.setValue(output.getValue());
        wpo.setOutpoint(op);
        // only maker or taker
        let script = status == ONLY_TAKER_SETTLED ? outputScript : originalScript;
        if (hasAddressInScript(script, address)) {
          debug(`${address} unlockable is ${hash}.${index}`);
          accountBalances.collateralizedSpendableOutPoints.push(wpo);
        }
      }
    } catch (err) {
      debug(err);
    }
  }

  async getTransferHistory(address, from, max = 50) {
    const blockchain = 'bc';
    address = address.toLowerCase();
    let blakeAddr = '0x' + blake2bl(blake2bl(address.toLowerCase()) + address.toLowerCase());
    let block;
    if (from === 'latest') {
      let lastAddressBlock = await this._persistence.get(`address.last.${blakeAddr}`);
      if (lastAddressBlock) {
        block = await this._persistence.get(`${blockchain}.block.${lastAddressBlock}`);
      } else {
        block = await this._persistence.get(`${blockchain}.block.${from}`);
      }
    } else {
      block = await this._persistence.get(`${blockchain}.block.${from}`);
    }
    if (!block) throw new Error('Latest block not found');
    let transfers = [];
    let numBlocks = 0;

    let fromHeight = block.getHeight();
    let toHeight = block.getHeight();

    while (transfers.length < max && block && numBlocks < 100) {
      for (let tx of block.getTxsList()) {
        let owner = getTxOwnerHashed(tx);
        if (owner === '0x' + blake2bl(address)) owner = address;
        for (let j = 0; j < tx.getOutputsList().length; j++) {
          const output = tx.getOutputsList()[j];
          const outputScript = toASM(Buffer.from(output.getOutputScript()), 0x01);
          const outputType = getScriptType(output.getOutputScript());

          let transfer = new Transfer();
          transfer.setHeight(block.getHeight());
          transfer.setAmount(internalToHuman(output.getValue(), NRG));
          transfer.setTxHash(tx.getHash());
          transfer.setTxOutputIndex(j);
          transfer.setTimestamp(block.getTimestamp());

          // received nrg or placed maker/taker order
          if (hasAddressInScript(outputScript, address)) {
            if (outputType === ScriptType.NRG_TRANSFER) {
              transfer.setTo(address);
              transfer.setFrom(owner);
            } else if (outputType === ScriptType.MAKER_OUTPUT) {
              transfer.setTo('Maker');
              transfer.setFrom(address);
            } else if (outputType === ScriptType.TAKER_OUTPUT) {
              transfer.setTo('Taker');
              transfer.setFrom(address);
            }
            transfers.push(transfer);
          } else if (owner === address && outputType === ScriptType.NRG_TRANSFER) {
            // sent nrg
            transfer.setFrom(address);
            transfer.setTo(outputScript.split(' ')[1]);
            transfers.push(transfer);
          }
        }
      }
      toHeight = block.getHeight();
      numBlocks++;
      block = await this._persistence.getBlockByHash(block.getPreviousHash(), 'bc', { cached: true });
    }

    let transferResponse = new TransferResponse();
    transferResponse.setTransfersList(transfers);
    transferResponse.setTo(toHeight.toString());
    transferResponse.setFrom(fromHeight.toString());
    // console.log(transferResponse.toJSON())
    return transferResponse;
  }

  async tradeStatus(latestHeight, blockHeight, makerScript, hash, index) {
    const { settlement } = parseMakerLockScript(makerScript);

    let isWithinSettlement = await this._utxoManager.isTxWithinSettlement(hash, index);
    if (isWithinSettlement) {
      return STILL_IN_SETTLEMENT;
    }

    const makerSettlesInfo = await this._utxoManager.isTxSettled(hash, index, true);
    const takerSettlesInfo = await this._utxoManager.isTxSettled(hash, index, false);

    // if both settled or neither settled
    if (makerSettlesInfo == takerSettlesInfo) {
      return MAKER_TAKER_SETTLED;
    } else if (makerSettlesInfo) {
      return ONLY_MAKER_SETTLED;
    } else if (takerSettlesInfo) {
      return ONLY_TAKER_SETTLED;
    }
  }

  async extractMakerOrder(wp) {
    let order = new MakerOrderInfo();
    let o = wp.getOutpoint();

    let outputScript = toASM(Buffer.from(wp.getOriginalScript()), 0x01);
    const makerInfo = parseMakerLockScript(outputScript);
    Object.keys(makerInfo).map(key => {
      order[`set${key[0].toUpperCase()}${key.slice(1)}`](makerInfo[key]);
    });
    let ratio = new BN(1);

    if (wp.getCallbackScript()) {
      let callbackScript = toASM(Buffer.from(wp.getCallbackScript()), 0x01);
      let [_, blockHeight, originalMakerTxOutput] = await this._utxoManager.getInitialMakerOrder(outputScript, wp.getBlockHeight());
      order.setTradeHeight(blockHeight);
      ratio = new BN(originalMakerTxOutput.getValue()).div(new BN(o.getValue()));
    } else {
      order.setTradeHeight(wp.getBlockHeight());
    }

    order.setSendsUnit(new BN(makerInfo.sendsUnit).div(ratio).toString());
    order.setReceivesUnit(new BN(makerInfo.receivesUnit).div(ratio).toString());

    order.setCollateralizedNrg(internalToHuman(o.getValue(), NRG).toString());

    order.setTxHash(o.getHash());
    order.setTxOutputIndex(o.getIndex());
    order.setIsSettled(false);

    return order;
  }
}
exports.Wallet = Wallet;